<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2010-2013 Ning, Inc.
  ~
  ~ Ning licenses this file to you under the Apache License, version 2.0
  ~ (the "License"); you may not use this file except in compliance with the
  ~ License.  You may obtain a copy of the License at:
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>killbill</artifactId>
        <groupId>com.ning.billing</groupId>
        <version>0.8.14</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>killbill-server</artifactId>
    <packaging>war</packaging>
    <name>killbill-server</name>
    <properties>
        <!-- http://jira.codehaus.org/browse/MRESOURCES-99 -->
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
    </properties>
    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.dmurph</groupId>
            <artifactId>JGoogleAnalyticsTracker</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <!-- Needed by jmxutils -->
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>${guice.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ning</groupId>
            <artifactId>async-http-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-account</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-beatrix</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-beatrix</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-catalog</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-client-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-currency</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-invoice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-junction</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-osgi</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-overdue</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-payment</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-payment</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-subscription</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-tenant</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-usage</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-util</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing</groupId>
            <artifactId>killbill-util</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ning.billing.commons</groupId>
            <artifactId>killbill-clock</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.billing.commons</groupId>
            <artifactId>killbill-clock</artifactId>
            <type>test-jar</type>
            <!--
+            Until we move ClockMock outside of test package
           <scope>test</scope>
           -->
        </dependency>
        <dependency>
            <groupId>com.ning.billing.commons</groupId>
            <artifactId>killbill-embeddeddb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ning.billing.commons</groupId>
            <artifactId>killbill-queue</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.jetty</groupId>
            <artifactId>ning-service-skeleton-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ning.jetty</groupId>
            <artifactId>ning-service-skeleton-jdbi</artifactId>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-guice</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-mxj</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-mxj-db-files</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>stringtemplate</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-deploy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jmx</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-xml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skife.config</groupId>
            <artifactId>config-magic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.weakref</groupId>
            <artifactId>jmxutils</artifactId>
            <version>1.12</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>io.tesla.jettyconsole</groupId>
                <artifactId>jetty-console-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>createconsole</goal>
                        </goals>
                        <configuration>
                            <backgroundImage>${basedir}/src/main/jettyconsole/killbill.png</backgroundImage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <!-- We would like to be able to run the war, jar and jettyconsole plugins at the same time;
                        and we could, except they rely on a strict ordering (jettyconsole has to run after the war and
                        before the jar, or jettyconsole won't find the war artifact). This could be done by relying
                        on the declaration ordering of the various plugins (all have to be bound to the package phase),
                        but that's fragile. Instead, ignore altogether the jar for now, until maven is smarter. -->
                        <phase>pierre-s-hack-for-maven</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assemble-killbill</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createSourcesJar>true</createSourcesJar>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                            <filters>
                                <filter>
                                    <artifact>${project.groupId}:${project.artifactId}</artifact>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                        <version>${logback.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                        <version>${logback.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-deploy</artifactId>
                        <version>${jetty.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-jmx</artifactId>
                        <version>${jetty.version}</version>
                    </dependency>
                    <!-- Needed to redirect Jetty logs to slf4j -->
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                        <version>${slf4j.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <jettyXml>${basedir}/src/main/jetty-config/ning-jetty-conf.xml</jettyXml>
                    <contextXml>${basedir}/src/main/jetty-config/contexts/root.xml</contextXml>
                    <systemProperties>
                        <systemProperty>
                            <!-- See root.xml -->
                            <name>xn.jetty.webapps.defaultsDescriptor</name>
                            <value>${basedir}/src/main/jetty-config/etc/webdefault.xml</value>
                        </systemProperty>
                        <systemProperty>
                            <name>logback.configurationFile</name>
                            <value>file:${basedir}/src/main/resources/logback.xml</value>
                        </systemProperty>
                    </systemProperties>
                    <scanIntervalSeconds>0</scanIntervalSeconds>
                    <stopPort>9966</stopPort>
                    <stopKey>foo</stopKey>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>debian</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>${project.basedir}/../bin/db-helper</executable>
                            <arguments>
                                <argument>-a dump</argument>
                                <argument>-f ${project.build.directory}/killbill.ddl.sql</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.vafer</groupId>
                        <artifactId>jdeb</artifactId>
                        <version>1.0.2-SNAPSHOT</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <configuration>
                                    <dataSet>
                                        <!-- Ubuntu specific files -->
                                        <data>
                                            <src>${project.basedir}/src/deb/control/killbill-server.default</src>
                                            <type>file</type>
                                            <dst>/etc/default/killbill-server</dst>
                                        </data>
                                        <data>
                                            <src>${project.basedir}/src/deb/control/killbill-server.upstart</src>
                                            <type>file</type>
                                            <dst>/etc/init/killbill-server.conf</dst>
                                        </data>
                                        <data>
                                            <src>${project.basedir}/src/deb/control/copyright</src>
                                            <type>file</type>
                                            <dst>/usr/share/doc/killbill/copyright</dst>
                                        </data>
                                        <!-- TODO /usr/share/doc/changelog.Debian.gz -->
                                        <data>
                                            <type>template</type>
                                            <!-- Make sure to list all of them here so they are properly deleted on package removal -->
                                            <paths>
                                                <path>/etc/killbill</path>
                                                <path>/var/run/killbill</path>
                                                <path>/usr/share/killbill</path>
                                                <path>/var/lib/killbill</path>
                                                <path>/var/log/killbill</path>
                                            </paths>
                                        </data>

                                        <!-- Kill Bill specific files -->
                                        <data>
                                            <src>${project.build.directory}/${project.name}-${project.version}-jetty-console.war</src>
                                            <type>file</type>
                                            <dst>/usr/share/killbill/${project.name}-standalone.war</dst>
                                        </data>
                                        <data>
                                            <src>${project.basedir}/src/deb/support/killbill.sh</src>
                                            <type>file</type>
                                            <dst>/usr/bin/${project.name}</dst>
                                            <mapper>
                                                <type>perm</type>
                                                <filemode>0755</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>${project.basedir}/src/deb/support/logback.xml</src>
                                            <type>file</type>
                                            <dst>/etc/killbill/logback.xml</dst>
                                        </data>
                                        <data>
                                            <src>${project.basedir}/src/deb/support/killbill.properties</src>
                                            <type>file</type>
                                            <dst>/etc/killbill/${project.name}.properties</dst>
                                        </data>
                                        <data>
                                            <src>${project.build.directory}/killbill.ddl.sql</src>
                                            <type>file</type>
                                            <dst>/usr/share/killbill/${project.name}.ddl.sql</dst>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
